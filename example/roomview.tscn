[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]

script/source = "extends Panel

var preload_message = preload(\"res://message.tscn\")

var scroll_to_bottom = true
var scrolled_to_bottom = true

# MDAxNmxvY2F0aW9uIHZ1cnBvLmZpCjAwMTNpZGVudGlmaWVyIGtleQowMDEwY2lkIGdlbiA9IDEKMDAyN2NpZCB1c2VyX2lkID0gQGdvZG90X3Rlc3Q6dnVycG8uZmkKMDAxNmNpZCB0eXBlID0gYWNjZXNzCjAwMjFjaWQgbm9uY2UgPSBra2FWTl8sZm1Xd1YmWW4qCjAwMmZzaWduYXR1cmUgMdnRwn8uCWb_E-lIzGvGaGdJ7YAta_g3W6Y-7Ip88X0K

var room setget set_room
func set_room(r, c=true):
	if (c):
		clear()
	room = r
	room.connect(\"ephemeral_event\", self, \"ephemeral_event\")
	room.connect(\"timeline_event\", self, \"timeline_event\")
	room.connect(\"state_event\", self, \"state_event\")
	room.state_sync().wait_to_finish()
	for event in room.get_events():
		process_timeline_event(event)

func clear():
	get_node(\"room_name\").set_text(\"\")
	get_node(\"room_topic\").set_text(\"\")
	get_node(\"typing\").set_text(\"\")
	get_node(\"messagebox\").set_text(\"\")
	for c in get_node(\"messages/list\").get_children():
		get_node(\"messages/list\").remove_child(c)
	if room:
		room.disconnect(\"ephemeral_event\", self, \"ephemeral_event\")
		room.disconnect(\"timeline_event\", self, \"timeline_event\")
		room.disconnect(\"state_event\", self, \"state_event\")
	
func _ready():
	get_node(\"messages/_v_scroll\").connect(\"changed\", self, \"scrollbar_changed\")
	get_node(\"messages/_v_scroll\").connect(\"value_changed\", self, \"scrollbar_value_changed\")

func scrollbar_changed(v):
	var scrollbar = get_node(\"messages/_v_scroll\")
	if scrollbar.page >= get_node(\"messages/list\").get_minimum_size().y:
		scrolled_to_bottom = true
	if scroll_to_bottom:
		scrollbar.set_value(scrollbar.max_value-scrollbar.page)
		scroll_to_bottom = false
	if scrolled_to_bottom:
		scrollbar.set_value(scrollbar.max_value-scrollbar.page)

func scrollbar_value_changed(v):
	var scrollbar = get_node(\"messages/_v_scroll\")
	scrolled_to_bottom = (scrollbar.max_value == 0 or scrollbar.value == scrollbar.max_value-scrollbar.page)

func has_room():
	if (room):
		return true
	return false

func process_timeline_event(e):
	if (e['type'] == \"m.room.message\" and e.has('content') and e['content'].has('body')):
		var message = preload_message.instance(true)
		add_event(message)
		message.set_sender_name(self.get_name(e['sender']))
		message.set_message_text(e['content']['body'])
	elif (e['type'] == \"m.room.name\"):
		var message = preload_message.instance(true)
		add_event(message)
		message.set_sender_name(self.get_name(e['sender']))
		message.set_message_text(\"changed the room name to \"+e['content']['name'])
	elif (e['type'] == \"m.room.topic\"):
		var message = preload_message.instance(true)
		add_event(message)
		message.set_sender_name(self.get_name(e['sender']))
		message.set_message_text(\"changed the room topic to \"+e['content']['topic'])
	else:
		pass
		#print(\"Unrecognized event!\")
		#print(e)

func add_event(event):
	get_node(\"messages/list\").add_child(event)
	if (scrolled_to_bottom):
		scroll_to_bottom = true

func get_name(user_id):
	return room.get_member_display_name(user_id, true)

func timeline_event(event):
	process_timeline_event(event)

func send_message(text=\"\"):
	if (get_node(\"messagebox\").text != \"\"):
		room.send_text_message(get_node(\"messagebox\").text)
		get_node(\"messagebox\").clear()

func ephemeral_event(event):
	if (event['type'] == \"m.typing\"):
		if (event['content']['user_ids'].size() == 0):
			get_node(\"typing\").text = \"\"
		elif (event['content']['user_ids'].size() == 1):
			get_node(\"typing\").text = event['content']['user_ids'][0] + \" is typing\"
		else:
			var typing_text = String(event['content']['user_ids'])
			typing_text = typing_text.substr(1, typing_text.length()-2)
			
			get_node(\"typing\").text = typing_text + \" are typing\"

func state_event(event):
	get_node(\"room_name\").set_text(room.get_name(false))
	get_node(\"room_topic\").set_text(room.get_topic(false))"

[node name="Room view" type="Panel"]

anchor_right = 1
anchor_bottom = 1
rect_clip_content = false
mouse_filter = 0
script = SubResource( 1 )

[node name="typing" type="Label" parent="."]

anchor_top = 1
anchor_right = 1
anchor_bottom = 1
margin_left = 20.0
margin_top = 20.0
margin_right = 20.0
rect_clip_content = false
mouse_filter = 2
size_flags_vertical = 0
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="room_topic" type="Label" parent="."]

anchor_right = 1
margin_left = 20.0
margin_top = 40.0
margin_right = 20.0
margin_bottom = 60.0
rect_clip_content = false
mouse_filter = 2
size_flags_vertical = 0
custom_colors/font_color = Color( 0.617188, 0.617188, 0.617188, 1 )
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="room_name" type="Label" parent="."]

anchor_right = 1
margin_left = 20.0
margin_top = 20.0
margin_right = 20.0
margin_bottom = 40.0
rect_clip_content = false
mouse_filter = 2
size_flags_vertical = 0
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="messages" type="ScrollContainer" parent="."]

anchor_right = 1
anchor_bottom = 1
margin_left = 20.0
margin_top = 60.0
margin_right = 20.0
margin_bottom = 50.0
mouse_filter = 0
scroll_horizontal = false
scroll_vertical = true

[node name="list" type="VBoxContainer" parent="messages"]

margin_right = 1366.0
margin_bottom = 651.0
rect_clip_content = false
mouse_filter = 1
size_flags_horizontal = 3
size_flags_vertical = 3
alignment = 2

[node name="send" type="Button" parent="."]

anchor_left = 1
anchor_top = 1
anchor_right = 1
anchor_bottom = 1
margin_left = 70.0
margin_top = 44.0
margin_right = 20.0
margin_bottom = 20.0
rect_clip_content = false
mouse_filter = 0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "send"
flat = false

[node name="messagebox" type="LineEdit" parent="."]

anchor_top = 1
anchor_right = 1
anchor_bottom = 1
margin_left = 20.0
margin_top = 44.0
margin_right = 85.0
margin_bottom = 20.0
rect_clip_content = false
mouse_filter = 0
size_flags_vertical = 3
expand_to_len = false
focus_mode = 2
placeholder_alpha = 0.6
caret_blink = false
caret_blink_speed = 0.65

[connection signal="pressed" from="send" to="." method="send_message"]


